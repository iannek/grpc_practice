version: '3'
services:
  ##Backend
  backend:
    build: 
      context: ./Backend/
    tty: true
    depends_on:
      - mysql
    volumes:
      - ./Backend/src:/app
    ports:
      - 8000:50051
    command: sh -c "python3 app.py"
    links:
      - mysql
  mysql:
    image: mysql
    container_name: mysql_host
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
    - ./Backend/mysql/data:/var/lib/mysql
    - ./Backend/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    - ./Backend/mysql/sql:/docker-entrypoint-initdb.d
    - ./Backend/mysql/csv:/etc/mysql/csv
    ports:
    - 3306:3306
  frontend_notype:
    build:
      context: ./frontend_notype
      dockerfile: Dockerfile
    volumes:
     - ./frontend_notype/react-sample/src:/usr/src/app/react-sample/src
     - ./frontend_notype/react-sample/public/keycloak.json:/usr/src/app/react-sample/public/keycloak.json
    command: sh -c "npm install && npm start"
    ports:
     - "3000:3000"
    tty: true
  proxy:
    build: ./proxy
    command: "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"
    volumes:
      - ./proxy/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "10000:10000"
  postgres:
    image: postgres
    volumes:
      - ./keycloak/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
      image: quay.io/keycloak/keycloak:latest
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: Pa55w0rd
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8080:8080
      depends_on:
        - postgres
networks:
  default:
    driver: bridge