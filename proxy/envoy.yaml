admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: greeter_service
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: Authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          access_log:
            - name: envoy.file_access_log
              config:
                path: /dev/stdout
          http_filters:
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                jwt_provider:
                  #forward_payload_header: base64url_encoded(jwt_payload_in_JSON)
                  issuer: http://localhost:8080/auth/realms/test
                  #audiences:
                  #- test
                  remote_jwks:
                    http_uri:
                      uri: http://keycloak:8080/auth/realms/test/protocol/openid-connect/certs
                      cluster: jwks_cluster
                      timeout: 60s
                    cache_duration:
                      seconds: 300
              rules:
                - match:
                    prefix: /
                  requires:
                    provider_and_audiences:
                      provider_name: jwt_provider
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
  clusters:
  - name: greeter_service
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    hosts: [{ socket_address: { address: backend, port_value: 50051 }}]
  - name: jwks_cluster
    connect_timeout: 0.25s
    type: STRICT_DNS
    load_assignment:
      cluster_name: jwks_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address: { address: keycloak, port_value: 8080 }